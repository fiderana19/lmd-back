"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MongoException_1 = require("./MongoException");
var DuplicateKeyException = /** @class */ (function (_super) {
    __extends(DuplicateKeyException, _super);
    function DuplicateKeyException(message, payload, callback) {
        if (callback === void 0) { callback = function () { return null; }; }
        var _this = _super.call(this, 409, message === undefined
            ? 'E11000.Duplicate key found. Might be a result of unique constraint in the index defined in schema'
            : message, payload, callback) || this;
        _this.reference =
            'https://docs.mongodb.com/manual/core/index-unique/#unique-index-and-missing-field';
        return _this;
    }
    return DuplicateKeyException;
}(MongoException_1.MongoException));
exports.default = DuplicateKeyException;
